<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<article>
   <articleinfo>
      <title>Структура комплекса и постановка задачи.</title>
      <author>
         <firstname>John</firstname>
         <surname>Smith</surname>
      </author>
      <pubdate>2003-09-08</pubdate>
      <date>2006-02-26</date>
      <issuenum>18</issuenum>
   </articleinfo>
   <sect1>
      <title>ВВЕДЕНИЕ</title>
      <para>Для достижения указанной цели в работе поставлены и решены следующие <emphasis role="bold">задачи</emphasis>:</para>
      <para>1. Определить основные классы аппаратуры тренажерных стендов, и провести детальный анализ причин, повышающих сложность, ресурсоемкость и риск разработки комплексных моделей БВС.</para>
      <para>2. Разработать формальный аппарат описания структуры и динамики модельных программ реального времени, отражающий ресурсоемкость, характеристики производительности, временное поведение программ БВС, логические связи между модельными и бортовыми компьютерами.</para>
      <para>3. На основе разработанного формализма определить в алгоритмической форме критерии выполнения моделями реального времени требований, как в штатной, так и в тренажерной среде.</para>
      <para>4. Разработать методы анализа и прогноза нагрузок на каналы связи при передаче телеметрических потоков и синхронизации процессов в реальном времени для применяемых в тренажерах классов оборудования.</para>
      <para>5. Разработать инструментальные средства измерения, анализа и прогноза характеристик производительности программ и каналов передачи модельных данных реального времени для повышения эффективности процесса разработки тренажерных комплексов.</para>
      <para>
         <emphasis role="bold">Наиболее существенные результаты и научная новизна</emphasis> диссертационной работы определяются наличием следующих результатов:</para>
      <para>1. Определены основные понятия, формализм и структура описания динамики моделирующего комплекса реального времени. Выявлены факторы, которые определяют особенности временного поведения штатных управляющих задач и изучено влияние изменений в рабочей среде на соблюдение требований к программам реального времени.</para>
      <para>2. Обоснован распределенный подход к моделированию передачи модельной и телеметрической информации по сети, который исключает накладные расходы от сложных методов обнаружения коллизий. Показано, что сложность моделирования можно значительно сократить при сохранении точности.</para>
      <para>3. Изучены особенности передачи пакетов 1553 и данных моделирования по общим шинам в основных режимах арбитража. Разработана детальная модель шинных транзакций, которая учитывает физические характеристики шины, включая блочную передачу и арбитраж с перекрытием.</para>
      <para>4. Разработана модель компьютерных часов с различной аппаратной базой как управляемого генератора с использованием гибридной обратной связи фаза/частота. Разработан алгоритм синхронизации моделей сегментов управления БВС, объединенных синхронной шиной, а также алгоритм отсечения для определения корректных часов в некотором множестве.</para>
      <para>5. На базе метода ветвей и границ разработан алгоритм синтеза расписаний управляющих задач и профилей цифровых массивов управления, максимизирующий запас остаточного времени. Алгоритм учитывает задержки обмена и взаимодействие расписаний группы компьютеров.</para>
      <para>
         <emphasis role="bold">Основные положения, выносимые на защиту</emphasis>:</para>
      <para>1. Структура МБВС и информационно-функциональных моделей в ее составе. Анализ факторов, определяющих особенности временного поведения штатных управляющих задач и влияния изменений в среде функционирования на реализацию требований к штатным программам и модельному обеспечению реального времени.</para>
      <para>2. Распределенный подход к моделированию передачи телеметрической и модельной информации в стендовой сети, который исключает обнаружение коллизий. Имитационная модель сети на основе данного подхода.</para>
      <para>3. Детальная модель шинных транзакций общей шины, которая исследует физические параметры шины, включая блочную передачу, арбитраж, задержки и пропускную способность. Протокол передачи модельной информации в многопроцессорных системах.</para>
      <para>4. Модель компьютерных часов как управляемого генератора с использованием гибридной обратной связи фаза/частота. Алгоритм синхронизации моделирующих процессов БЦВК на основе предложенной модели.</para>
      <para>5. Соотношения, связывающие время выполнения задачи и время отклика в многозадачной однопроцессорной системе, расширенные с учетом различных эффектов систем управления и БЦВК.</para>
      <para>6. Алгоритм на основе метода ветвей и границ, составляющий комплексное расписание задач и профили обмена, который максимизирует запас остаточного времени системы, учитывает задержки передачи цифровых массивов и взаимное влияние расписаний модельных и бортовых компьютеров.</para>
      <para>
         <emphasis role="bold">Структура и объем диссертации</emphasis>
         <replaceable>.</replaceable>   Работа состоит из введения, четырех глав, заключения, списка литературы и приложения. Объем работы составляет 158 страниц машинописного текста и включает в себя 38 рисунков, 8 таблиц и 73 наименования литературы.</para>
      <para>
         <emphasis role="bold">Внедрение</emphasis>
         <replaceable>.</replaceable> Исследования проводились в рамках разработки модели БВС тренажерного комплекса МКС на основании контракта между РКК «Энергия» и РГНИИЦПК, при непосредственном участии соискателя. Эффективность внедрения подтверждается многолетним опытом применения тренажерного комплекса в РКК и ЦПК и соответствующими актами. Комплекс продемонстрировал высокие показатели надежности, в ряде случаев превышающие аналоги, в том числе зарубежные. Изложенные методы также применялись автором при разработке наземного комплекса отработки МКС в РКК «Энергия». Предполагается развитие указанных методов в рамках совместных проектов РКК «Энергия» с партнерами по программе МКС.</para>
      <para>Типичный набор применяемых в ИФМ модулей включает в себя:</para>
      <itemizedlist>
         <listitem>
            <para>процессорный модуль синхронизации и управления VME-обменом;</para>
         </listitem>
         <listitem>
            <para>процессорный модуль связи с графическим интерфейсом пользователя, мониторинга и управления прикладными процессами;</para>
         </listitem>
         <listitem>
            <para>периферийный VME-контроллер VMIVME-5588 управления обменом по интерфейсу рефлективной памяти;</para>
         </listitem>
         <listitem>
            <para>периферийный VME-контроллер Bancomm-bc635 управления синхронизацией по интерфейсу IRIG;</para>
         </listitem>
         <listitem>
            <para>ни одного, один или несколько (в зависимости от конкретных требований) периферийных VME-контроллеров SBS-ABI-V5 управления обменом по интерфейсу 1553, каждый из которых может обслуживать по 2 шины;</para>
         </listitem>
         <listitem>
            <para>один или несколько процессорных модулей, отвечающих за выполнение определенного конкретными требованиями набора функций моделирования.</para>
         </listitem>
      </itemizedlist>
      <para>Проследим передачу пакета шаг за шагом.</para>
      <para>Алгоритм 2.1:</para>
      <para>
         <emphasis role="num">(1)</emphasis> Передатчик проверяет, что приемный буфер приемника имеет статус приема READY</para>
      <para>
         <emphasis role="num">(2)</emphasis> Передатчик считывает смещение и размер приемного буфера приемника</para>
      <para>
         <emphasis role="num">(3)</emphasis> Передатчик устанавливает статус приема приемного буфера приемника в состояние IDLE</para>
      <para>
         <emphasis role="num">(4)</emphasis> Передатчик вычисляет VME-адрес буфера приемника</para>
      <para>
         <emphasis role="num">(5)</emphasis> Передатчик записывает данные в буфер приемника, расположенный в области памяти буферов пакетов Приемника</para>
      <para>
         <emphasis role="num">(6)</emphasis> Передатчик увеличивает на единицу последовательный номер, связанный с буфером приемника</para>
      <para>
         <emphasis role="num">(7)</emphasis> Передатчик устанавливает статус передачи приемного буфера в приемнике в значение READY (статус передачи передатчика расположен в области памяти приемника)</para>
      <para>
         <emphasis role="num">(8)</emphasis> Передатчик проверяет возможность оповещения приемника о завершении передачи с использованием прерывания. Если да, то передатчик посылает приемнику прерывание.</para>
      <para>
         <emphasis role="num">(9)</emphasis> Приемник проверяет, что статус передачи приемного буфера равен READY. Данная проверка может происходит в результате получения прерывания при оповещении или во время опроса статуса.</para>
      <para>
         <emphasis role="num">(10)</emphasis> Приемник устанавливает статус передачи приемного буфера в значение IDLE. Затем приемник обрабатывает пакет или откладывает обработку пакета и переходит непосредственно к пункту 10</para>
      <para>
         <emphasis role="num">(11)</emphasis> Приемник выделяет новый приемный буфер в своей области общей памяти и записывает в дескриптор новое смещение к этому буферу (в том случае, если обработка и копирование пакета отложены)</para>
      <para>
         <emphasis role="num">(12)</emphasis> Приемник устанавливает статус приема приемного буфера 1 в значение READY (статус приема приемного буфера приемника расположен в области памяти передатчика). Если возможно, приемник посылает передатчику прерывание, сигнализируя наличие свободного буфера для передачи. Последовательность возобновляется с начала.</para>
      <para>
         <emphasis role="bold">Алгоритм 3.1</emphasis> использует величину <parameter>endcount</parameter> в качестве счетчика границ и <parameter>midcount</parameter> как количество показаний вне интервала пересечения.</para>
      <para>
         <emphasis role="num">(1)</emphasis> endcount := midcount :=0.</para>
      <para>
         <emphasis role="num">(2)</emphasis> Для всех элементов [<replaceable>offset,type</replaceable>] в направлении от начала сортированного списка к концу вычтем <parameter>type</parameter> из <parameter>endcount</parameter>. Если <replaceable>endcount≥m</replaceable>–<parameter>f</parameter>, то найдена нижняя граница. В этом случае присвоим <replaceable>lower:=offset</replaceable> и перейдем к шагу 3. Иначе, если <parameter>type</parameter>=0, увеличим <parameter>midcount</parameter> на единицу и перейдем к следующему элементу.</para>
      <para>
         <emphasis role="num">(3)</emphasis> На этом шаге найдена пробная нижняя граница, а количество средних точек еще не определено. Опять присвоим <parameter>endcount</parameter>:=0, не меняя <parameter>midcount.</parameter>
      </para>
      <para>
         <emphasis role="num">(4)</emphasis> Вновь для всех элементов от конца сортированного списка к началу добавим величину <parameter>type</parameter> каждого элемента к значению <parameter>endcount</parameter>. Если <replaceable>endcount≥m</replaceable>–<parameter>f</parameter>, перейдем к шагу 5. Иначе, если <parameter>type</parameter>=0, увеличим <parameter>midcount</parameter> на единицу и перейдем к очередному элементу.</para>
      <para>
         <emphasis role="num">(5)</emphasis> Если <replaceable>lower≤upper</replaceable> и <replaceable>midcount≤f</replaceable>, процедура завершается, и объявляется успех, причем <parameter>lower</parameter> равно нижней, а <parameter>upper</parameter> – верхней границе полученного интервала уверенности. Иначе увеличим <parameter>f</parameter> на единицу. Если <replaceable>f≥m</replaceable>/2, процедура завершается, и объявляется отказ. Иначе вернемся к шагу 1.</para>
      <para>Конец.</para>
      <para/>
   </sect1>
</article>
